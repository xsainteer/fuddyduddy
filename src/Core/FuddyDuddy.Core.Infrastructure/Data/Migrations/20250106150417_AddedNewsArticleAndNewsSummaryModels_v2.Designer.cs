// <auto-generated />
using System;
using FuddyDuddy.Core.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FuddyDuddy.Core.Infrastructure.Data.Migrations
{
    [DbContext(typeof(FuddyDuddyDbContext))]
    [Migration("20250106150417_AddedNewsArticleAndNewsSummaryModels_v2")]
    partial class AddedNewsArticleAndNewsSummaryModels_v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FuddyDuddy.Core.Domain.Entities.NewsArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CollectedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("NewsSourceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("PublishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RawContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NewsSourceId");

                    b.ToTable("NewsArticles");
                });

            modelBuilder.Entity("FuddyDuddy.Core.Domain.Entities.NewsSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DialectType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("LastCrawled")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Domain")
                        .IsUnique();

                    b.ToTable("NewsSources");
                });

            modelBuilder.Entity("FuddyDuddy.Core.Domain.Entities.NewsSummary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("GeneratedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("NewsArticleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NewsArticleId")
                        .IsUnique();

                    b.ToTable("NewsSummaries");
                });

            modelBuilder.Entity("FuddyDuddy.Core.Domain.Entities.NewsArticle", b =>
                {
                    b.HasOne("FuddyDuddy.Core.Domain.Entities.NewsSource", "NewsSource")
                        .WithMany()
                        .HasForeignKey("NewsSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsSource");
                });

            modelBuilder.Entity("FuddyDuddy.Core.Domain.Entities.NewsSummary", b =>
                {
                    b.HasOne("FuddyDuddy.Core.Domain.Entities.NewsArticle", "NewsArticle")
                        .WithOne("Summary")
                        .HasForeignKey("FuddyDuddy.Core.Domain.Entities.NewsSummary", "NewsArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsArticle");
                });

            modelBuilder.Entity("FuddyDuddy.Core.Domain.Entities.NewsArticle", b =>
                {
                    b.Navigation("Summary");
                });
#pragma warning restore 612, 618
        }
    }
}
