// <auto-generated />
using System;
using FuddyDuddy.Core.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FuddyDuddy.Core.Infrastructure.Data.Migrations
{
    [DbContext(typeof(FuddyDuddyDbContext))]
    [Migration("20250105142057_MigrationName")]
    partial class MigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FuddyDuddy.Core.Domain.Entities.NewsSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("LastCrawled")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Domain")
                        .IsUnique();

                    b.ToTable("NewsSources");
                });

            modelBuilder.Entity("FuddyDuddy.Core.Domain.Entities.NewsSource", b =>
                {
                    b.OwnsOne("FuddyDuddy.Core.Domain.ValueObjects.RobotsTxtConfig", "RobotsTxt", b1 =>
                        {
                            b1.Property<Guid>("NewsSourceId")
                                .HasColumnType("char(36)");

                            b1.Property<int?>("CrawlDelay")
                                .HasColumnType("int")
                                .HasColumnName("RobotsTxtCrawlDelay");

                            b1.Property<DateTimeOffset>("LastFetched")
                                .HasColumnType("datetime(6)")
                                .HasColumnName("RobotsTxtLastFetched");

                            b1.Property<string>("RulesJson")
                                .HasColumnType("json")
                                .HasColumnName("RobotsTxtRules");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasMaxLength(2048)
                                .HasColumnType("varchar(2048)")
                                .HasColumnName("RobotsTxtUrl");

                            b1.HasKey("NewsSourceId");

                            b1.ToTable("NewsSources");

                            b1.WithOwner()
                                .HasForeignKey("NewsSourceId");
                        });

                    b.OwnsMany("FuddyDuddy.Core.Domain.ValueObjects.SitemapConfig", "Sitemaps", b1 =>
                        {
                            b1.Property<Guid>("NewsSourceId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<DateTimeOffset>("LastSuccessfulFetch")
                                .HasColumnType("datetime(6)");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.Property<TimeSpan>("UpdateFrequency")
                                .HasColumnType("time(6)");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasMaxLength(2048)
                                .HasColumnType("varchar(2048)");

                            b1.HasKey("NewsSourceId", "Id");

                            b1.ToTable("SitemapConfig");

                            b1.WithOwner()
                                .HasForeignKey("NewsSourceId");
                        });

                    b.Navigation("RobotsTxt");

                    b.Navigation("Sitemaps");
                });
#pragma warning restore 612, 618
        }
    }
}
